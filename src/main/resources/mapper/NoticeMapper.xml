<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.octans.project.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="org.octans.project.entity.entity.Notice">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, title, content, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.octans.project.entity.entity.Notice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project_notice (user_id, title,
      content, created_at, updated_at
      )
    values ( #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
      )
  </insert>
  <insert id="insertSelective" parameterType="org.octans.project.entity.entity.Notice">
    insert into project_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        CURRENT_TIMESTAMP,
      </if>
      <if test="updatedAt != null">
        CURRENT_TIMESTAMP,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.octans.project.entity.entity.Notice">
    update project_notice
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.octans.project.entity.entity.Notice">
    update project_notice set
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      updated_at = CURRENT_TIMESTAMP
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="NoticeResultMap" type="org.octans.project.entity.dto.notice.NoticeA01DTO">
    <id property="id" column="id"/>
    <result column="title" property="title" />
    <result column="content" property="content" />
    <result column="user_name" property="userName" />
    <result column="created_at" property="createdAt" />
  </resultMap>
  <select id="selectByQuery" resultMap="NoticeResultMap">
    select n.id, n.title, n.content, n.created_at, u.user_name
    from project_notice n inner join project_user u
    on n.user_id = u.id
    <where>
      <if test="title != null and title != ''">
        title LIKE concat('%',#{title},'%')
      </if>
      <if test="content != null and content != ''">
       and content LIKE concat('%',#{content},'%')
      </if>
    </where>
  </select>
</mapper>
